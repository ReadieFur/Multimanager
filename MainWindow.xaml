<Window x:Class="Multimanager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Multimanager"
        mc:Ignorable="d" WindowStyle="None" AllowsTransparency="True" ResizeMode="CanResizeWithGrip" Background="{Binding backgroundSolid}"
        Loaded="Window_Loaded" Title="WindowTemplate" Icon="Resources/Icon.ico" Height="450" Width="1020" MinHeight="450" MinWidth="1020">

    <Window.DataContext>
        <!--#region TEMPLATE-->
        <local:XAMLStyles/>
        <!--#endregion-->
    </Window.DataContext>

    <Window.Resources>
        <!--#region TEMPLATE STYLES-->
        <local:StarWidthConverter x:Key="starWidthConverter"/>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#region Buttons-->
        <SolidColorBrush x:Key="Button.Static.Background" Color="{Binding backgroundSolid}"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="{Binding accentSolid}"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="{Binding accentSolid}"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="{Binding borderSolid}"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="{Binding foregroundSolid}"/>
        <Style x:Key="buttonGrey" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{Binding borderSolid}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{Binding borderSolid}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="redButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF0000"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#EE0000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="themedButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Static.Background}"/>-->
                                <Setter Property="TextElement.Foreground" TargetName="border" Value="{Binding foregroundSolid}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Labels-->
        <Style x:Key="themedLabel" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{Binding foregroundSolid}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{Binding borderSolid}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#endregion-->
    </Window.Resources>

    <Grid x:Name="background" Background="{Binding backgroundSolid}">
        <!--#region TEMPLATE-->
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="230"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid x:Name="topBar" MouseDown="topBar_MouseDown" Height="50" VerticalAlignment="Top" Background="{Binding backgroundSolid}" Grid.ColumnSpan="2">
            <Image HorizontalAlignment="Left" Height="35" VerticalAlignment="Center" Width="35" Source="Resources/Icon.ico" Margin="10,0,0,0"/>
            <WrapPanel VerticalAlignment="Top" HorizontalAlignment="Right">
                <Button x:Name="minimisebtn" FontFamily="Segoe MDL2 Assets" Content="&#xE921;" HorizontalAlignment="Right" VerticalAlignment="Top" Width="50" Height="50" BorderBrush="{x:Null}" Click="minimisebtn_Click" Margin="0" Background="{Binding backgroundSolid}" FontSize="14" Style="{DynamicResource buttonGrey}" Foreground="{Binding foregroundSolid}"/>
                <Button x:Name="resizebtn" FontFamily="Segoe MDL2 Assets" Content="&#xE922;" HorizontalAlignment="Right" VerticalAlignment="Top" Width="50" Height="50" BorderBrush="{x:Null}" FontSize="14" Click="resizebtn_Click" Margin="0" Background="{Binding backgroundSolid}" Style="{DynamicResource buttonGrey}" Foreground="{Binding foregroundSolid}"/>
                <Button x:Name="closebtn" FontFamily="Segoe MDL2 Assets" Content="&#xE8BB;" HorizontalAlignment="Right" VerticalAlignment="Top" Width="50" Height="50" BorderBrush="{x:Null}" Background="{Binding backgroundSolid}" FontSize="16" Click="closebtn_Click" Style="{DynamicResource redButton}" Foreground="{Binding foregroundSolid}"/>
            </WrapPanel>
            <Label x:Name="appTitle" Content="App Name" HorizontalAlignment="Left" Margin="50,0,0,0" VerticalAlignment="Center" FontSize="22" FontFamily="Century Gothic" Foreground="{Binding foregroundSolid}" Background="{x:Null}"/>
        </Grid>
        <Path x:Name="verticalLine" Data="M175,134 L175,378.01844" HorizontalAlignment="Right" Margin="0" Stretch="Fill" Width="1" Grid.RowSpan="2" Stroke="{Binding foregroundFadeTopBottom}"/>
        <Label x:Name="release" Content="Release: VN" HorizontalAlignment="Left" FontSize="14" FontFamily="Century Gothic" Margin="5,0,0,5" Style="{DynamicResource themedLabel}" VerticalAlignment="Bottom" Grid.Row="1"/>
        <Label x:Name="watermark" Content="By kOF.Readie" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,5,5" FontSize="14" FontFamily="Century Gothic" Background="{x:Null}" Foreground="{Binding foregroundSolid}" Grid.Column="1" Grid.Row="1"/>
        <!--#endregion-->
        <WrapPanel Width="230" Grid.Row="1" Margin="0,0,0,42.167" Orientation="Vertical">
            <Grid x:Name="SystemTab" Background="{Binding borderSolid}" HorizontalAlignment="Left" Height="60" Width="229" VerticalAlignment="Top" Grid.Row="1" MouseDown="SystemTab_MouseDown">
                <Image x:Name="SystemTabImage" HorizontalAlignment="Left" Height="45" VerticalAlignment="Center" Width="45" Source="Resources/SystemBlack.png" Margin="10,0,0,0"/>
                <Label x:Name="SystemTabTXT" Foreground="{Binding foregroundSolid}" Content="System" HorizontalAlignment="Left" Margin="60,0,0,0" VerticalAlignment="Center" FontSize="18"/>
                <Border x:Name="SystemTabBorder" BorderBrush="{Binding accentSolid}" BorderThickness="5,0,0,0" Margin="0"/>
            </Grid>
            <Grid x:Name="ConsoleTab" Background="{Binding backgroundSolid}" HorizontalAlignment="Left" Height="60" Width="229" VerticalAlignment="Top" Grid.Row="1" MouseDown="ConsoleTab_MouseDown">
                <Image x:Name="ConsoleTabImage" HorizontalAlignment="Left" Height="45" VerticalAlignment="Center" Width="45" Source="Resources/ConsoleBlack.png" Margin="10,0,0,0"/>
                <Label x:Name="ConsoleTabTXT" Foreground="{Binding foregroundSolid}" Content="Console" HorizontalAlignment="Left" Margin="60,0,0,0" VerticalAlignment="Center" FontSize="18"/>
                <Border x:Name="ConsoleTabBorder" BorderBrush="{Binding accentSolid}" BorderThickness="5,0,0,0" Margin="0" Visibility="Hidden"/>
            </Grid>
        </WrapPanel>
        <Grid x:Name="mainContentGrid" Grid.Column="1" Margin="0" Grid.Row="1">
            <Frame x:Name="windowContent" Content="" Margin="0" Source="/Multimanager;component/SystemPages/Home.xaml" NavigationUIVisibility="Hidden"/>
        </Grid>
        <Button x:Name="backButton" Visibility="Hidden" VerticalContentAlignment="Center" Content="&#xE72B;" HorizontalAlignment="Left" VerticalAlignment="Center" Width="50" Height="50" FontSize="18" BorderBrush="{x:Null}" Foreground="{Binding foregroundSolid}" Background="{Binding backgroundSolid}" Style="{DynamicResource buttonGrey}" Click="backButton_Click" FontFamily="Segoe MDL2 Assets" Grid.Column="1"/>
        <Border x:Name="windowBorder" BorderBrush="{Binding accentSolid}" BorderThickness="1" Margin="0" Visibility="Hidden" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
    </Grid>
</Window>
