<Page x:Class="Multimanager.SystemPages.Themes"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Multimanager"
      xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
      mc:Ignorable="d" 
      d:DesignHeight="400" d:DesignWidth="790"
      Title="Themes" Loaded="background_Loaded">
    
    <Page.DataContext>
        <local:XAMLStyles/>
    </Page.DataContext>

    <Page.Resources>
        <!--#region TEMPLATE STYLES-->
        <local:StarWidthConverter x:Key="starWidthConverter"/>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#region Buttons-->
        <SolidColorBrush x:Key="Button.Static.Background" Color="{Binding backgroundSolid}"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="{Binding accentSolid}"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="{Binding accentSolid}"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="{Binding borderSolid}"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="{Binding foregroundSolid}"/>
        <Style x:Key="buttonGrey" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{Binding borderSolid}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{Binding borderSolid}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="redButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF0000"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#EE0000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="themedButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Static.Background}"/>-->
                                <Setter Property="TextElement.Foreground" TargetName="border" Value="{Binding foregroundSolid}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Sliders-->
        <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="{Binding accentSolid}"/>
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="{Binding accentSolid}"/>
        <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="{Binding borderSolid}"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="{Binding backgroundSolid}"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="{Binding backgroundSolid}"/>
        <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                        <Canvas Margin="-6,-1">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center" Width="11"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                    <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                    <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                        <Canvas Margin="-1,-6">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Column="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top" Width="18"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="themedSlider" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="{Binding backgroundSolid}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{Binding foregroundSolid}"/>
            <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <!--#region Radio Buttons-->
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="{Binding backgroundSolid}"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="{Binding accentSolid}"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="{Binding borderSolid}"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="{Binding accentSolid}"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="{Binding foregroundSolid}"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="themedRADButton" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{Binding foregroundSolid}"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region CheckBoxes-->
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="{Binding backgroundSolid}"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="{Binding accentSolid}"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="{Binding borderSolid}"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="{Binding borderSolid}"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="{Binding borderSolid}"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="{Binding accentSolid}"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="{Binding foregroundSolid}"/>
        <Style x:Key="themedCheckBox" TargetType="{x:Type CheckBox}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{Binding foregroundSolid}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Foreground" Value="{Binding foregroundSolid}"/>
                            </Trigger>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Labels-->
        <Style x:Key="themedLabel" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{Binding foregroundSolid}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{Binding borderSolid}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Text Boxes-->
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="{Binding foregroundSolid}"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="{Binding foregroundSolid}"/>
        <Style x:Key="themedShortTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{Binding backgroundSolid}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{Binding foregroundSolid}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="false"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="SelectionBrush" Value="{Binding accentSolid}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                            <Trigger Property="IsSelectionActive" Value="true">
                                <Setter Property="SelectionBrush" Value="{Binding accentSolid}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{Binding accentSolid}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <!--#region ListView Properties-->
        <!--#region ListViews-->
        <SolidColorBrush x:Key="ListBorder" Color="{Binding foregroundSolid}"/>
        <Style x:Key="themedListView" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{StaticResource ListBorder}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Themes:ListBoxChrome x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Themes:ListBoxChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region List View Items-->
        <Style x:Key="ListViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle RadiusY="2" RadiusX="2" Stroke="{Binding accentSolid}" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="themedListViewItem" TargetType="{x:Type ListViewItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="Margin" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="5,2,5,2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="true">
                            <Border x:Name="InnerBorder" BorderThickness="1" CornerRadius="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="11"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="UpperHighlight" Fill="#75FFFFFF" Visibility="Collapsed"/>
                                    <GridViewRowPresenter Grid.RowSpan="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{Binding accentSolid}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="{Binding accentSolid}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{Binding accentSolid}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{Binding accentSolid}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{Binding borderSolid}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="themedListViewItemEmpty" TargetType="{x:Type ListViewItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="5,2,5,2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="true">
                            <Border x:Name="InnerBorder" BorderThickness="1" CornerRadius="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="11"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="UpperHighlight" Fill="#75FFFFFF" Visibility="Collapsed"/>
                                    <GridViewRowPresenter Grid.RowSpan="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{Binding backgroundSolid}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="{Binding backgroundSolid}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{Binding backgroundSolid}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{Binding backgroundSolid}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{Binding backgroundSolid}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region ListViewHeaders-->
        <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
            <Setter Property="Canvas.Right" Value="-9"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="{Binding backgroundSolid}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                            <Rectangle Fill="{Binding foregroundSolid}" HorizontalAlignment="Center" Width="1"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="themedGridViewColumn" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Century Gothic"/>
            <Setter Property="Background" Value="{Binding backgroundSolid}"/>
            <Setter Property="BorderBrush" Value="{Binding foregroundSolid}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Foreground" Value="{Binding foregroundSolid}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid SnapsToDevicePixels="true">
                            <Border x:Name="HeaderBorder" BorderBrush="{Binding foregroundSolid}" BorderThickness="0,0,0,1" Background="{Binding backgroundSolid}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="7"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="UpperHighlight" Fill="#FFE3F7FF" Visibility="Collapsed"/>
                                    <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
                                        <ContentPresenter x:Name="HeaderContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </Grid>
                            </Border>
                            <Border x:Name="HeaderHoverBorder" BorderThickness="1,0,1,1" Margin="1,1,0,0"/>
                            <Border x:Name="HeaderPressBorder" BorderThickness="1,1,1,0" Margin="1,0,0,1"/>
                            <Canvas>
                                <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}"/>
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="HeaderBorder" Value="{Binding accentSolid}"/>
                                <Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="HeaderBorder" Value="{Binding accentSolid}"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Role" Value="Floating">
                    <Setter Property="Opacity" Value="0.4082"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                <Canvas x:Name="PART_FloatingHeaderCanvas">
                                    <Rectangle Fill="#FF000000" Height="{TemplateBinding ActualHeight}" Opacity="0.4697" Width="{TemplateBinding ActualWidth}"/>
                                </Canvas>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Role" Value="Padding">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1" Background="{TemplateBinding Background}"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Height" Value="Auto">
                                        <Setter Property="MinHeight" Value="20"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="GridViewColumnHeaderGripperEmpty" TargetType="{x:Type Thumb}">
            <Setter Property="Canvas.Right" Value="-9"/>
            <Setter Property="Width" Value="0"/>
            <Setter Property="Height" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="{Binding backgroundSolid}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                            <Rectangle Fill="{Binding backgroundSolid}" HorizontalAlignment="Center" Width="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="themedGridViewColumnEmpty" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{Binding backgroundSolid}"/>
            <Setter Property="BorderBrush" Value="{Binding backgroundSolid}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Foreground" Value="{Binding foregroundSolid}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid SnapsToDevicePixels="true">
                            <Border x:Name="HeaderBorder" BorderBrush="{Binding backgroundSolid}" BorderThickness="0,0,0,1" Background="{Binding backgroundSolid}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="7"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="UpperHighlight" Fill="#FFE3F7FF" Visibility="Collapsed"/>
                                    <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
                                        <ContentPresenter x:Name="HeaderContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </Grid>
                            </Border>
                            <Border x:Name="HeaderHoverBorder" BorderThickness="1,0,1,1" Margin="1,1,0,0"/>
                            <Border x:Name="HeaderPressBorder" BorderThickness="1,1,1,0" Margin="1,0,0,1"/>
                            <Canvas>
                                <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripperEmpty}"/>
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="HeaderBorder" Value="{Binding backgroundSolid}"/>
                                <Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="HeaderBorder" Value="{Binding backgroundSolid}"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Role" Value="Floating">
                    <Setter Property="Opacity" Value="0.4082"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                <Canvas x:Name="PART_FloatingHeaderCanvas">
                                    <Rectangle Fill="#FF000000" Height="{TemplateBinding ActualHeight}" Opacity="0.4697" Width="{TemplateBinding ActualWidth}"/>
                                </Canvas>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Role" Value="Padding">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1" Background="{TemplateBinding Background}"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Height" Value="Auto">
                                        <Setter Property="MinHeight" Value="20"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
        <!--#endregion-->

        <Style x:Key="noButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
    </Page.Resources>

    <Grid Margin="10,0,0,0">
        <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Height="100.749" Width="241.939">
            <RadioButton x:Name="ColourLight" IsChecked="False" Content="Light" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,45.553,0,0" FontSize="14" Width="56.48" BorderBrush="{Binding foregroundSolid}" Foreground="{Binding foregroundSolid}" Style="{DynamicResource themedRADButton}" Checked="ColourLight_Checked" Background="{Binding borderSolid}"/>
            <RadioButton x:Name="ColourDark" IsChecked="False" Content="Dark" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,72.893,0,0" FontSize="14" Width="56.48" Checked="ColourDark_Checked" Background="{Binding borderSolid}" BorderBrush="{Binding foregroundSolid}" Style="{DynamicResource themedRADButton}" Foreground="{Binding foregroundSolid}"/>
            <Label x:Name="ColourTXT" Content="Theme" HorizontalAlignment="Left" Margin="2,0,0,0" VerticalAlignment="Top" FontSize="16" Background="{x:Null}" Foreground="{Binding foregroundSolid}"/>
            <Path x:Name="ColourLine" Data="M288.268,128 L367.32494,128" HorizontalAlignment="Left" Height="2.712" Margin="0,35.424,0,0" Stretch="Fill" Stroke="{Binding foregroundFadeRight}" VerticalAlignment="Top" Width="217.057"/>
        </Grid>
        <Grid HorizontalAlignment="Left" Height="244.251" Margin="0,105.749,0,0" VerticalAlignment="Top" Width="241.939">
            <Grid HorizontalAlignment="Left" Height="151.09" VerticalAlignment="Top" Width="240" Margin="0,49.67,0,0">
                <Button Content="" HorizontalAlignment="Left" Margin="180,0,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFD13438" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_7"/>
                <Button Content="" HorizontalAlignment="Left" Margin="210,0,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFFF4343" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_8"/>
                <Button Content="" HorizontalAlignment="Left" Margin="120,0,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFDA3B01" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_5"/>
                <Button Content="" HorizontalAlignment="Left" Margin="150,0,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFEF6950" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_6"/>
                <Button Content="" HorizontalAlignment="Left" Margin="60,0,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFF7630C" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_3"/>
                <Button Content="" HorizontalAlignment="Left" Margin="90,0,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFCA5010" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_4"/>
                <Button Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFFFB900" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_1"/>
                <Button Content="" HorizontalAlignment="Left" Margin="30,0,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="DarkOrange" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_2"/>
                <Button Content="" HorizontalAlignment="Left" Margin="180,30,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFC239B3" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_15"/>
                <Button Content="" HorizontalAlignment="Left" Margin="210,30,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF9A0089" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_16"/>
                <Button Content="" HorizontalAlignment="Left" Margin="120,30,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFE3008C" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_13"/>
                <Button Content="" HorizontalAlignment="Left" Margin="150,30,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFBF0077" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_14"/>
                <Button Content="" HorizontalAlignment="Left" Margin="60,30,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFEA005E" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_11"/>
                <Button Content="" HorizontalAlignment="Left" Margin="90,30,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFC30052" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_12"/>
                <Button Content="" HorizontalAlignment="Left" Margin="0,30,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFE74856" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_9"/>
                <Button Content="" HorizontalAlignment="Left" Margin="30,30,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFE81123" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_10"/>
                <Button Content="" HorizontalAlignment="Left" Margin="180,60,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FFB146C2" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_23"/>
                <Button Content="" HorizontalAlignment="Left" Margin="210,60,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF881798" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_24"/>
                <Button Content="" HorizontalAlignment="Left" Margin="120,60,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF8764B8" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_21"/>
                <Button Content="" HorizontalAlignment="Left" Margin="150,60,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF744DA9" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_22"/>
                <Button Content="" HorizontalAlignment="Left" Margin="60,60,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF8E8CD8" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_19"/>
                <Button Content="" HorizontalAlignment="Left" Margin="90,60,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF6B69D6" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_20"/>
                <Button Content="" HorizontalAlignment="Left" Margin="0,60,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF0078D7" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_17"/>
                <Button Content="" HorizontalAlignment="Left" Margin="30,60,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF0063B1" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_18"/>
                <Button Content="" HorizontalAlignment="Left" Margin="180,90,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF00CC6A" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_31"/>
                <Button Content="" HorizontalAlignment="Left" Margin="210,90,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF10893E" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_32"/>
                <Button Content="" HorizontalAlignment="Left" Margin="120,90,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF00B294" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_29"/>
                <Button Content="" HorizontalAlignment="Left" Margin="150,90,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF018574" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_30"/>
                <Button Content="" HorizontalAlignment="Left" Margin="60,90,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF00B7C3" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_27"/>
                <Button Content="" HorizontalAlignment="Left" Margin="90,90,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF038387" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_28"/>
                <Button Content="" HorizontalAlignment="Left" Margin="0,90,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF0099BC" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_25"/>
                <Button Content="" HorizontalAlignment="Left" Margin="30,90,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF2D7D9A" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_26"/>
                <Button Content="" HorizontalAlignment="Left" Margin="180,120,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF498205" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_39"/>
                <Button Content="" HorizontalAlignment="Left" Margin="210,120,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF107C10" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_40"/>
                <Button Content="" HorizontalAlignment="Left" Margin="120,120,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF567C73" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_37"/>
                <Button Content="" HorizontalAlignment="Left" Margin="150,120,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF486860" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_38"/>
                <Button Content="" HorizontalAlignment="Left" Margin="60,120,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF68768A" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_35"/>
                <Button Content="" HorizontalAlignment="Left" Margin="90,120,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF515C6B" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_36"/>
                <Button Content="" HorizontalAlignment="Left" Margin="0,120,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF7A7574" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_33"/>
                <Button Content="" HorizontalAlignment="Left" Margin="30,120,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource noButtonStyle}" Background="#FF5D5A58" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click_34"/>
            </Grid>
            <Label x:Name="AccentTXT" Content="Accent" HorizontalAlignment="Left" Margin="2,0,0,0" VerticalAlignment="Top" FontSize="16" Background="{x:Null}" Foreground="{Binding foregroundSolid}" FontFamily="Century Gothic"/>
            <Path x:Name="AccentLine" Data="M288.268,128 L367.32494,128" HorizontalAlignment="Left" Height="2.712" Margin="0,35.424,0,0" Stretch="Fill" Stroke="{Binding foregroundFadeRight}" VerticalAlignment="Top" Width="217.057"/>
            <TextBox x:Name="ThemeAccentTXT" HorizontalAlignment="Left" Height="23" Margin="0,200.76,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="238.917" BorderBrush="{Binding foregroundSolid}" LostFocus="ThemeAccentTXT_LostFocus" IsEnabled="False" Style="{DynamicResource themedShortTextBox}" SelectionBrush="{Binding accentSolid}" Foreground="{Binding foregroundSolid}" Background="{Binding borderSolid}"/>
            <CheckBox x:Name="HexCheckBox" Content="Custom HEX code" HorizontalAlignment="Left" Margin="0,225,0,0" VerticalAlignment="Top" BorderBrush="Black" Checked="CustomHEX_Checked" Unchecked="CustomHEX_Unchecked" Background="{Binding borderSolid}" Style="{DynamicResource themedCheckBox}"/>
        </Grid>
        <Grid Margin="265,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="224">
            <Button x:Name="ChooseWallpaper" Content="Choose Wallpaper" HorizontalAlignment="Left" Height="30" Margin="2,43.136,0,0" VerticalAlignment="Top" Width="120" Click="ChooseWallpaper_Click" Style="{DynamicResource themedButton}"/>
            <Label x:Name="BackgroundText" Content="Background" HorizontalAlignment="Left" Margin="2,2,0,0" VerticalAlignment="Top" FontSize="16" Background="{x:Null}" Foreground="{Binding foregroundSolid}" FontFamily="Century Gothic"/>
            <Path x:Name="BackgroundLine" Data="M288.268,128 L367.32494,128" HorizontalAlignment="Left" Height="2.712" Margin="0,35.424,0,0" Stretch="Fill" Stroke="{Binding foregroundFadeRight}" VerticalAlignment="Top" Width="217.057"/>
            <Button x:Name="defaultWallpaper" HorizontalContentAlignment="Left" Content="Default wallpaper" HorizontalAlignment="Left" Height="30" Margin="127,43.136,0,0" VerticalAlignment="Top" Width="97" Click="defaultWallpaper_Click" Style="{DynamicResource noButtonStyle}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{Binding accentSolid}"/>
        </Grid>
        <Grid Margin="265,106.423,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="224" Height="243.577">
            <Image x:Name="imagepreview" Stretch="Fill"  HorizontalAlignment="Left" Height="126" Margin="0,43.136,0,0" VerticalAlignment="Top" Width="224" Source="/Multimanager;component/Resources/WindowsDefaultWallpaper.jpg"/>
            <Label x:Name="PreviewTXT" Content="Preview" HorizontalAlignment="Left" Margin="2,0,0,0" VerticalAlignment="Top" FontSize="16" Background="{x:Null}" Foreground="{Binding foregroundSolid}" FontFamily="Century Gothic"/>
            <Path x:Name="PreviewLine" Data="M288.268,128 L367.32494,128" HorizontalAlignment="Left" Height="2.712" Margin="0,35.424,0,0" Stretch="Fill" Stroke="{Binding foregroundFadeRight}" VerticalAlignment="Top" Width="217.057"/>
            <Button x:Name="StartMenu" Content="" HorizontalAlignment="Left" Height="85" Margin="-1.5,85.5,0,-1.364" VerticalAlignment="Top" Width="95.667" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding backgroundSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy" Content="" HorizontalAlignment="Left" Height="15" Margin="78.214,99.136,0,0" VerticalAlignment="Top" Width="15" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy1" Content="" HorizontalAlignment="Left" Height="4.174" Margin="48.154,94.962,0,0" VerticalAlignment="Top" Width="22.81" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding foregroundSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy2" Content="" HorizontalAlignment="Left" Height="15" Margin="78.214,114.136,0,0" VerticalAlignment="Top" Width="15" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy3" Content="Aa" HorizontalAlignment="Left" Height="30" Margin="48.214,99.136,0,0" VerticalAlignment="Top" Width="30" BorderBrush="{x:Null}" Foreground="{Binding foregroundSolid}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy4" Content="" HorizontalAlignment="Left" Height="7.5" Margin="48.214,129.136,0,0" VerticalAlignment="Top" Width="7.5" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy5" Content="" HorizontalAlignment="Left" Height="7.5" Margin="55.714,129.136,0,0" VerticalAlignment="Top" Width="7.5" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy6" Content="" HorizontalAlignment="Left" Height="7.5" Margin="55.714,136.636,0,0" VerticalAlignment="Top" Width="7.5" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy7" Content="" HorizontalAlignment="Left" Height="7.5" Margin="48.154,136.636,0,0" VerticalAlignment="Top" Width="7.5" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy8" Content="" HorizontalAlignment="Left" Height="15" Margin="63.214,129.136,0,0" VerticalAlignment="Top" Width="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy9" Content="" HorizontalAlignment="Left" Height="15" Margin="48.154,144.136,0,0" VerticalAlignment="Top" Width="30" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy10" Content="" HorizontalAlignment="Left" Height="15" Margin="78.214,144.136,0,0" VerticalAlignment="Top" Width="15" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy11" Content="" HorizontalAlignment="Left" Height="7.5" Margin="0,99.137,0,0" VerticalAlignment="Top" Width="7.5" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy12" Content="" HorizontalAlignment="Left" Height="7.5" Margin="0,106.637,0,0" VerticalAlignment="Top" Width="7.5" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy13" Content="" HorizontalAlignment="Left" Height="7.5" Margin="0,114.136,0,0" VerticalAlignment="Top" Width="7.5" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy14" Content="" HorizontalAlignment="Left" Height="7.5" Margin="0,121.636,0,0" VerticalAlignment="Top" Width="7.5" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy15" Content="" HorizontalAlignment="Left" Height="7.5" Margin="0,129.136,0,0" VerticalAlignment="Top" Width="7.5" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy16" Content="" HorizontalAlignment="Left" Height="7.5" Margin="0,136.636,0,0" VerticalAlignment="Top" Width="7.5" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy17" Content="" HorizontalAlignment="Left" Height="7.5" Margin="0,144.136,0,0" VerticalAlignment="Top" Width="7.5" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy18" Content="" HorizontalAlignment="Left" Height="7.5" Margin="0,151.636,0,0" VerticalAlignment="Top" Width="7.5" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy19" Content="" HorizontalAlignment="Left" Height="4.174" Margin="0,94.962,0,0" VerticalAlignment="Top" Width="22.81" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding foregroundSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy20" Content="" HorizontalAlignment="Left" Height="4.174" Margin="7.5,100.962,0,0" VerticalAlignment="Top" Width="15.31" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding foregroundSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy21" Content="" HorizontalAlignment="Left" Height="4.174" Margin="7.5,108.295,0,0" VerticalAlignment="Top" Width="15.31" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding foregroundSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy22" Content="" HorizontalAlignment="Left" Height="4.174" Margin="7.5,115.712,0,0" VerticalAlignment="Top" Width="15.31" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding foregroundSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy23" Content="" HorizontalAlignment="Left" Height="4.174" Margin="7.5,123.295,0,0" VerticalAlignment="Top" Width="15.31" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding foregroundSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy24" Content="" HorizontalAlignment="Left" Height="4.174" Margin="7.5,131.045,0,0" VerticalAlignment="Top" Width="15.31" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding foregroundSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy25" Content="" HorizontalAlignment="Left" Height="4.174" Margin="7.5,138.295,0,0" VerticalAlignment="Top" Width="15.31" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding foregroundSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy26" Content="" HorizontalAlignment="Left" Height="4.174" Margin="7.5,145.878,0,0" VerticalAlignment="Top" Width="15.31" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding foregroundSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy27" Content="" HorizontalAlignment="Left" Height="4.174" Margin="7.5,153.295,0,0" VerticalAlignment="Top" Width="15.31" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding foregroundSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy28" Content="" HorizontalAlignment="Left" Height="74.464" Margin="111.835,60.755,0,0" VerticalAlignment="Top" Width="92.297" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding backgroundSolid}" Style="{DynamicResource noButtonStyle}" FontSize="8"/>
            <Button x:Name="StartMenu_Copy29" Content="" HorizontalAlignment="Left" Height="10.381" Margin="111.835,60.755,0,0" VerticalAlignment="Top" Width="92.297" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding accentSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="StartMenu_Copy30" Content="" HorizontalAlignment="Left" Height="4.174" Margin="115.823,63.879,0,0" VerticalAlignment="Top" Width="22.81" BorderBrush="{x:Null}" Foreground="{x:Null}" Background="{Binding foregroundSolid}" Style="{DynamicResource noButtonStyle}"/>
            <Button x:Name="SampleText" Content="Sample Text" HorizontalAlignment="Left" Height="19.416" Margin="111.835,68.988,0,0" VerticalAlignment="Top" Width="73.964" BorderBrush="{x:Null}" Foreground="{Binding foregroundSolid}" Background="{x:Null}" Style="{DynamicResource noButtonStyle}"/>
            <Grid HorizontalAlignment="Left" Height="73.077" Margin="0,170.5,0,0" VerticalAlignment="Top" Width="224">
                <WrapPanel Margin="-0.75,0,-1.75,0">
                    <Grid Height="100" Width="110" Margin="0,5,5,5">
                        <Image x:Name="image1" HorizontalAlignment="Center" Height="75" VerticalAlignment="Top" Width="150" Stretch="UniformToFill" Margin="0,-10,0,0" MouseDown="image1_MouseDown"/>
                    </Grid>
                    <Grid Height="100" Width="110" Margin="0,5">
                        <Image x:Name="image2" HorizontalAlignment="Center" Height="75" VerticalAlignment="Top" Width="150" Stretch="UniformToFill" Margin="0,-10,0,0" MouseDown="image2_MouseDown"/>
                    </Grid>
                </WrapPanel>
            </Grid>
        </Grid>
    </Grid>
</Page>
